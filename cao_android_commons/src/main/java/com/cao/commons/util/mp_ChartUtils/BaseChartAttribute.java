package com.cao.commons.util.mp_ChartUtils;import android.graphics.Color;//import com.github.mikephil.charting.charts.BarLineChartBase;//import com.github.mikephil.charting.components.Description;//import com.github.mikephil.charting.components.Legend;//import com.github.mikephil.charting.components.XAxis;//import com.github.mikephil.charting.components.YAxis;//import com.github.mikephil.charting.data.Entry;//import com.github.mikephil.charting.formatter.IAxisValueFormatter;//import com.github.mikephil.charting.formatter.LargeValueFormatter;//import com.github.mikephil.charting.interfaces.datasets.IBarDataSet;////import java.util.List;/////**// * Created by XiaoWu on 2017/9/19 0019.// */////public abstract class BaseChartAttribute<T extends Entry> {//    protected BarLineChartBase mChart;//    protected int allTextColor = Color.WHITE;   // 默认全部字体的颜色//    protected List<String> xName;   // X轴名称//    protected List<String> legendName;  // 图例名称//    protected List<T>[] mEntries;       // 数据////    /**//     * 设置所有标签颜色//     *///    public void setAllTextColor(int allTextColor) {//        this.allTextColor = allTextColor;//        // 设置所有标签颜色//        setChartLabelColor(allTextColor);//    }//////    public BaseChartAttribute(BarLineChartBase barChart, List<T>[] entries, List<String> xName, List<String> legendName) {//        this.mChart = barChart;//        this.xName = xName;//        this.mEntries = entries;//        this.legendName = legendName;//        initAttribute();//        setChartData();//    }////    // 设置图表数据//    protected abstract void setChartData();////    protected abstract void setChartLabelColor(int allTextColor);////    /**//     * 设置属性（子类要是改变属性 可以）//     *///    protected void initAttribute() {//////        mBarChart.setOnChartValueSelectedListener(this);//设置数值选择的监听//        // 是否显示条柱阴影////        mChart.setDrawBarShadow(false);//        // 如果没有数据的时候，会显示这个//        mChart.setNoDataText("You need to provide data for the chart.");//        //如果设置为真，所有显示值都显示在条柱的上面，而不是在条柱的顶部下面。////        mChart.setDrawValueAboveBar(true);//        Description description = new Description();//        //设置图表右下角的描述性文字，//        description.setText("小武");//        description.setTextSize(14);//        // 设置文字颜色//        description.setTextColor(Color.RED);//        // 在屏幕上以像素为单位设置描述文本的自定义位置////        description.setPosition(0,0);//        // 是否显示图表右角的文字//        description.setEnabled(false);//        mChart.setDescription(description);//        // 如果在图表中显示了超过60个条目，则没有任何值//        mChart.setMaxVisibleValueCount(60);//        // 是否双指同时缩放x轴和y轴//        mChart.setPinchZoom(true);//        // 是否可以缩放//        mChart.setScaleEnabled(true);//        // 是否显示网格背景//        mChart.setDrawGridBackground(false);//        mChart.setExtraRightOffset(25f);//        // 设背景////        mBarChart.setBackgroundColor(BaseApplication.getAppResources().getColor(com.jaydenxiao.common.R.color.colorAccent));//        // 网格背景颜色////        mBarChart.setGridBackgroundColor(BaseApplication.getAppResources().getColor(com.jaydenxiao.common.R.color.green));//        // 打开或关闭绘制的图表边框。（环绕图表的线）//        mChart.setDrawBorders(false);//        // 是否显示图例快//        mChart.getLegend().setEnabled(true);//        // 隐藏右边的坐标轴//        mChart.getAxisRight().setEnabled(false);//        mChart.animateY(2000); // 设置动画////        // 设置X轴的值//        IAxisValueFormatter xAxisFormatter = new AxisValueFormatter(xName);//        // X轴的属性//        XAxis xAxis = mChart.getXAxis();//        xAxis.setPosition(XAxis.XAxisPosition.BOTTOM); // 设置X轴标签值的位置//        xAxis.setDrawLabels(true);          // 是否显示X轴值//        xAxis.setDrawGridLines(false);      // 是否显示每个柱子的网线//        xAxis.setGranularityEnabled(true);//        xAxis.setLabelCount(8);            // 设置轴的标签数。请注意，这个数字不是固定的//        xAxis.setTextColor(allTextColor);////        xAxis.setCenterAxisLabels(true);    // 对分组有用////       xAxis.setAvoidFirstLastClipping(true); //设置x轴起点和终点label不超出屏幕  这个有时候会导致 值显示的位置不对//        xAxis.setValueFormatter(xAxisFormatter);////        xAxis.setLabelRotationAngle(30);  // 设置绘制x轴标签的角度（以度为单位）。////        // 左边Y轴的属性//        YAxis leftAxis = mChart.getAxisLeft();//        leftAxis.setPosition(YAxis.YAxisLabelPosition.OUTSIDE_CHART);//        leftAxis.setLabelCount(8);       // 设置轴的标签数。请注意，这个数字不是固定的//        leftAxis.setSpaceTop(15f);               // 设置图表中最高值的顶部间距（以轴的总范围的百分比表示）与轴上的最高值的比较。////        leftAxis.setGridColor();               //设置此轴的网格线的颜色。////        leftAxis.setGridLineWidth();           //设置此轴的网格线的宽度。////        leftAxis.setAxisLineColor();           //设置此轴的轴线的颜色。////        leftAxis.setAxisLineWidth();           //设置此轴的轴线的宽度。//        leftAxis.enableGridDashedLine(10, 10, 0);  //设置此轴的网格线虚线.//        leftAxis.setTextColor(allTextColor);//        leftAxis.setAxisMinimum(0f); // 默认设置y轴最小值从0开始//        leftAxis.setValueFormatter(new LargeValueFormatter());////        // 右边Y轴的属性//        YAxis rightAxis = mChart.getAxisRight();//        rightAxis.setDrawGridLines(false);//        rightAxis.setLabelCount(8, false);//        rightAxis.setValueFormatter(new LargeValueFormatter());//        rightAxis.setSpaceTop(15f);//        rightAxis.setAxisMinimum(0f);////        // 底下图快的属性//        Legend l = mChart.getLegend();//        l.setVerticalAlignment(Legend.LegendVerticalAlignment.BOTTOM);      // 图列垂直摆放的位置//        l.setHorizontalAlignment(Legend.LegendHorizontalAlignment.LEFT);     // 图列水平摆放的位置//        l.setOrientation(Legend.LegendOrientation.HORIZONTAL);              // 设置图列摆放纵横方向//        l.setForm(Legend.LegendForm.SQUARE); //设置图例的形状//        l.setFormSize(9f);                    //设置图例的大小//        l.setFormToTextSpace(5f);            //设置字体和形状之间的间距//        l.setDrawInside(false);//        l.setWordWrapEnabled(true);           //设置图列换行(注意使用影响性能,仅适用legend位于图表下面)//        l.setTextSize(11f);//        l.setXEntrySpace(4f);                //设置图例每个字体和形状 延X轴的间距（setOrientation = HORIZONTAL有效）//        l.setYEntrySpace(0f);                 //设置图例每个字体和形状 延Y轴的间距（setOrientation = VERTICAL 有效）//        l.setYOffset(5f);                     //设置比例块Y轴偏移量//        l.setTextSize(11f);                     //设置图例标签文本的大小//        l.setTextColor(allTextColor);          //设置图例标签文本的颜色////    }////    /**//     * 设置是否显示图表上的数据值//     *///    public void toggleChartValue(Boolean isShowValue) {//        List<IBarDataSet> sets = mChart.getData().getDataSets();//        for (IBarDataSet iSet : sets) {//            iSet.setDrawValues(isShowValue);//        }//        mChart.invalidate();//    }//////    /**//     * 底下图快的属性//     *//     * @param vertical    垂直方向位置 默认底部//     * @param horizontal  水平方向位置 默认右边//     * @param orientation 显示方向 默认水平展示//     */////    public void updateLegendOrientation(Legend.LegendVerticalAlignment vertical, Legend.LegendHorizontalAlignment horizontal, Legend.LegendOrientation orientation) {//        Legend l = mChart.getLegend();//        l.setVerticalAlignment(vertical);//        l.setHorizontalAlignment(horizontal);//        l.setOrientation(orientation);//        l.setDrawInside(false);////    }////    /**//     * X, Y轴label显示样式//     *//     * @param xvalueFromatter    x          不需要可以设置null//     * @param leftValueFromatter y      不需要可以设置null//     *///    public void setAxisFormatter(IAxisValueFormatter xvalueFromatter, IAxisValueFormatter leftValueFromatter) {//        mChart.getXAxis().setValueFormatter(xvalueFromatter);//        mChart.getAxisLeft().setValueFormatter(leftValueFromatter);//        mChart.invalidate();////    }////    /**//     *  遍历图列名称集合//     *///    protected String getLabel(int i) {//        if (legendName != null && legendName.size() > 0) {//            return legendName.get(i);//        } else//            return "";//    }////}